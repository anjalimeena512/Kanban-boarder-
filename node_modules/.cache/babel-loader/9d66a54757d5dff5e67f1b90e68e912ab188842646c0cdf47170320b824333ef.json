{"ast":null,"code":"import axios from \"axios\";\nexport const fetchData = () => async dispatch => {\n  try {\n    dispatch({\n      type: \"dataRequest\"\n    });\n    const {\n      data\n    } = await axios.get(\"https://api.quicksell.co/v1/internal/frontend-assignment/\");\n    dispatch({\n      type: \"dataSuccess\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"dataFailure\"\n    });\n  }\n};\nexport const dataSelect = (group, tickets, order) => async dispatch => {\n  try {\n    console.log(group, tickets, order);\n    dispatch({\n      type: \"dataSelectRequest\"\n    });\n    let user = false;\n    let set = new Set();\n    let array = [],\n      dataSelected = [];\n    if (order === \"title\") {\n      dataSelected.forEach((element, index) => {\n        var _element$index, _element$index$value;\n        (_element$index = element[index]) === null || _element$index === void 0 ? void 0 : (_element$index$value = _element$index.value) === null || _element$index$value === void 0 ? void 0 : _element$index$value.sort((a, b) => a.title.localeCompare(b.title));\n      });\n    }\n    if (group === \"status\") {\n      tickets.forEach(element => {\n        set.add(element.status);\n      });\n      array = [...set];\n      array.forEach((element, index) => {\n        let array = tickets.filter(filterElement => {\n          return element === filterElement.status;\n        });\n        dataSelected.push({\n          [index]: {\n            title: element,\n            value: array\n          }\n        });\n      });\n    } else if (group === \"user\") {\n      var _tickets$users;\n      user = true;\n      tickets === null || tickets === void 0 ? void 0 : (_tickets$users = tickets.users) === null || _tickets$users === void 0 ? void 0 : _tickets$users.forEach((element, index) => {\n        var _tickets$tickets;\n        array = tickets === null || tickets === void 0 ? void 0 : (_tickets$tickets = tickets.tickets) === null || _tickets$tickets === void 0 ? void 0 : _tickets$tickets.filter(filterElement => {\n          return element.id === filterElement.userId;\n        });\n        dataSelected.push({\n          [index]: {\n            title: element.name,\n            value: array\n          }\n        });\n      });\n      console.log(dataSelected);\n    } else {\n      let priorityList = [\"No priority\", \"Low\", \"Medium\", \"High\", \"Urgent\"];\n      priorityList.forEach((element, index) => {\n        array = tickets.filter(filterElement => {\n          return index === filterElement.priority;\n        });\n        dataSelected.push({\n          [index]: {\n            title: element,\n            value: array\n          }\n        });\n      });\n    }\n    if (order === \"priority\") {\n      dataSelected.forEach((element, index) => {\n        var _element$index2, _element$index2$value;\n        (_element$index2 = element[index]) === null || _element$index2 === void 0 ? void 0 : (_element$index2$value = _element$index2.value) === null || _element$index2$value === void 0 ? void 0 : _element$index2$value.sort((a, b) => b.priority - a.priority);\n      });\n    }\n    console.log(dataSelected);\n    dispatch({\n      type: \"dataSelectSuccess\",\n      payload: {\n        dataSelected,\n        user\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: \"dataSelectFailure\",\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","fetchData","dispatch","type","data","get","payload","error","dataSelect","group","tickets","order","console","log","user","set","Set","array","dataSelected","forEach","element","index","_element$index","_element$index$value","value","sort","a","b","title","localeCompare","add","status","filter","filterElement","push","_tickets$users","users","_tickets$tickets","id","userId","name","priorityList","priority","_element$index2","_element$index2$value","message"],"sources":["E:/React_Project/src/actions/action.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchData = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"dataRequest\" });\r\n\r\n    const { data } = await axios.get(\r\n      \"https://api.quicksell.co/v1/internal/frontend-assignment/\"\r\n    );\r\n\r\n    dispatch({ type: \"dataSuccess\", payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: \"dataFailure\" });\r\n  }\r\n};\r\n\r\nexport const dataSelect = (group, tickets, order) => async (dispatch) => {\r\n  try {\r\n    console.log(group, tickets, order);\r\n    dispatch({ type: \"dataSelectRequest\" });\r\n\r\n    let user = false;\r\n    let set = new Set();\r\n    let array = [],\r\n      dataSelected = [];\r\n\r\n    if (order === \"title\") {\r\n      dataSelected.forEach((element, index) => {\r\n        element[index]?.value?.sort((a, b) => a.title.localeCompare(b.title));\r\n      });\r\n    }\r\n\r\n    if (group === \"status\") {\r\n      tickets.forEach((element) => {\r\n        set.add(element.status);\r\n      });\r\n\r\n      array = [...set];\r\n\r\n      array.forEach((element, index) => {\r\n        let array = tickets.filter((filterElement) => {\r\n          return element === filterElement.status;\r\n        });\r\n        dataSelected.push({\r\n          [index]: {\r\n            title: element,\r\n            value: array,\r\n          },\r\n        });\r\n      });\r\n    } else if (group === \"user\") {\r\n      user = true;\r\n      tickets?.users?.forEach((element, index) => {\r\n        array = tickets?.tickets?.filter((filterElement) => {\r\n          return element.id === filterElement.userId;\r\n        });\r\n\r\n        dataSelected.push({\r\n          [index]: {\r\n            title: element.name,\r\n            value: array,\r\n          },\r\n        });\r\n      });\r\n      console.log(dataSelected);\r\n    } else {\r\n      let priorityList = [\"No priority\", \"Low\", \"Medium\", \"High\", \"Urgent\"];\r\n\r\n      priorityList.forEach((element, index) => {\r\n        array = tickets.filter((filterElement) => {\r\n          return index === filterElement.priority;\r\n        });\r\n\r\n        dataSelected.push({\r\n          [index]: {\r\n            title: element,\r\n            value: array,\r\n          },\r\n        });\r\n      });\r\n    }\r\n\r\n    if (order === \"priority\") {\r\n      dataSelected.forEach((element, index) => {\r\n        element[index]?.value?.sort((a, b) => b.priority - a.priority);\r\n      });\r\n    }\r\n\r\n    console.log(dataSelected);\r\n    dispatch({ type: \"dataSelectSuccess\", payload: { dataSelected, user } });\r\n  } catch (error) {\r\n    dispatch({ type: \"dataSelectFailure\", payload: error.message });\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}